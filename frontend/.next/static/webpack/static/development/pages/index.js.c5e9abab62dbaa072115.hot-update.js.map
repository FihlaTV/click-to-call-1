{"version":3,"file":"static/webpack/static/development/pages/index.js.c5e9abab62dbaa072115.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_DASHBOARD_ITEMS_QUERY } from './DashboardItems';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteCampaignItem(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_DASHBOARD_ITEMS_QUERY });\n\n    // 2. Filter the deleted item out of the page\n    data.items = data.campaignItems.filter(item => item.id !== payload.data.deleteCampaignItem.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_DASHBOARD_ITEMS_QUERY, data });\n  };\n  render() {\n    console.log(this.props);\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteCampaignItem, { error }) => (\n          <button\n            className=\"dupbtn\"\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this item?')) {\n                console.log(deleteCampaignItem);\n                deleteCampaignItem().catch(err => {\n                  alert(err.message);\n                });\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAiBA;;;;AArCA;AACA;AAuCA;;;;A","sourceRoot":""}