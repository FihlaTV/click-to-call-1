{"version":3,"file":"static/webpack/static/development/pages/preview.js.df88b0dcae585610a313.hot-update.js","sources":["webpack:///./components/MatchedScripts.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { legislators } from \"../lib/legislators\";\nimport { houseMembers, senateMembers } from \"../lib/people\";\n\nconst SINGLE_SCRIPT_QUERY = gql`\n  query SINGLE_SCRIPT_QUERY($id: String!) {\n    campaignScripts(where: { campaignID: $id }) {\n      id\n      title\n      scriptContent\n      targetCondition2\n      targetCondition3\n      targetCondition4\n      data\n    }\n  }\n`;\n\nclass MatchedScripts extends Component {\n\n  state = {\n    targetCandidates: this.props.candidates\n  };\n\n  render() {\n    return (\n      <div>\n        <Query query={SINGLE_SCRIPT_QUERY} variables={{ id: this.props.id }}>\n          {({ data, loading, error }) => {\n            if (loading) return <p>Loading...</p>;\n            if (data.item) return <p>No Item Found for ID...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n\n            let houseMemberArray = [];\n            let senateMemberArray = [];\n            let legislatorHouseArray = [];\n            let legislatorSenateArray = [];\n            let candidateName = \"\";\n\n            houseMembers.map(hm => {\n              var dis = hm.district;\n              var st = hm.state;\n              houseMemberArray.push(hm.label + \", \" + st + \"-\" + dis);\n            });\n\n            senateMembers.map(se => {\n              var st = se.state;\n              senateMemberArray.push(se.label + \", \" + st);\n            });\n\n            legislators.map(leg => {\n              var arr = leg.terms;\n\n              var recentterm = arr[arr.length - 1];\n              if (recentterm.district == undefined) {\n                legislatorSenateArray.push(\n                  leg.name.first + \" \" + leg.name.last + \", \" + recentterm.state\n                );\n              } else {\n                legislatorHouseArray.push(\n                  leg.name.first +\n                    \" \" +\n                    leg.name.last +\n                    \", \" +\n                    recentterm.state +\n                    \"-\" +\n                    recentterm.district\n                );\n              }\n            });\n\n            const statedis = this.props.candState + \"-\" + this.props.candDistrict;\n\n            houseMemberArray.map(hma => {\n              let name = hma.split(\", \");\n              if (name[1] == statedis) {\n                legislatorHouseArray.map(lha => {\n                  let legname = lha.split(\", \");\n                  if (legname[1] == name[1]) {\n                    candidateName = name[0];\n                  }\n                });\n              }\n            });\n\n            // let tally = 0;\n            // tally = tally + 10;\n            // tally = tally + 5;\n\n\n            // console.log(tally);\n\n            var lowest = Number.POSITIVE_INFINITY;\n            var highest = Number.NEGATIVE_INFINITY;\n            var tmp;\n\n            // Loops through all possible scripts\n             data.campaignScripts.map((cScript, i) => {\n\n              let tally = 0;\n\n              if (cScript.data[0]) {\n                var arraycontainskeyword =\n                  cScript.data.indexOf(candidateName) > -1;\n                if (arraycontainskeyword == true) {\n                  tally = tally + 10;\n                }\n              }\n\n              if (cScript.targetCondition3) {\n                if (this.props.candParty === \"Democratic Party\") {\n                  if (cScript.targetCondition3 == \"Democrat\") {\n                    tally = tally + 1;\n                  }\n                } else {\n                  if (cScript.targetCondition3 == \"Republican\") {\n                    tally = tally + 1;\n                  }\n                }\n              }\n\n              if (cScript.targetCondition4) {\n                if (this.props.candState) {\n                  if (this.props.candState == cScript.targetCondition4) {\n                    tally = tally + 5;\n                  }\n                }\n              }\n\n              if (cScript.targetCondition2) {\n                this.state.targetCandidates.map((cand, i) => {\n                  var scriptID = cand.id;\n                  // Loops through all legislators. Adds 10 to ranked score.\n                  legislators.map(q => {\n                    if (\n                      q.id.bioguide === scriptID &&\n                      cand.answer === cScript.targetCondition2\n                    ) {\n                      if(q.name.official_full == candidateName) {\n                        tally = tally + 3\n                      }\n                    }\n                  });\n                });\n              }\n\n              cScript.tally = tally;\n\n              tmp = cScript.tally;\n\n              if (tmp < lowest) {\n                lowest = tmp;\n              }\n              if (tmp > highest) {\n                highest = tmp;\n              }\n\n\n\n              // if (cScript.tally == 10) {\n                // return (\n                //   <div className=\"repNameScript\" key={i}>\n                //     <h1>{cScript.title}</h1>\n                //     {cScript.data}\n                //     <br />\n                //     {cScript.targetCondition2}\n                //     <br />\n                //     {cScript.targetCondition3}\n                //     <br />\n                //     {cScript.targetCondition4}\n                //     {cScript.tally}\n                //     <div className=\"scriptContainer\">\n                //       <div\n                //         dangerouslySetInnerHTML={{\n                //           __html: cScript.scriptContent\n                //         }}\n                //       />\n                //     </div>\n                //   </div>\n                // );\n              // }\n            });\n\n            console.log(data.campaignScripts);\n\n            return (\n              <h1>ews</h1>\n            );\n\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default MatchedScripts;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AASA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;;;;AA/KA;AACA;AAiLA;;;;A","sourceRoot":""}